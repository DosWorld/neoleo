 <!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>neobasic</title>
  </head>

<body>
<h1>neobasic</h1>

<code>Neobasic</code> is an embedded BASIC-like language.

<p>
It has syntactic elements: for, let
</p>

<p>
<b>Comments/remarks</b> in neobasic start from <code>#</code>, and continue to the end of the line. E.g.
<pre>#This is a comment</pre>
</p>


<p><b>Variable names</b> must be prefixed with <code>?</code>, e.g. <code>?myvar</code>. This is to stop potential confusion if I want to add things like cell references as first syntactic objects. Variables do not have to be defined before use.</p>

<hr><h2>Commands</h2>

<h3>cmd</h3>

Execute a regular neoleo command. Example:
<pre>
cmd("goto-cell B2")
cmd("edit-cell 42")
</pre>
This will set the value of cell B2 to 42.


<h3>for loops</h3>

They work as follows:
<pre>
for ?i := 1 to 3
	println(?i)
next
</pre>
  
<h3>let</h3>

Assigns the value of an expression to a variable. Example:
<pre>
let ?life := 41+1
println("Meaning of life is ", ?life)
</pre>

<h3>println</h3>

Prints a list of elements. See the <code>let</code> example.

</body>
</html>
